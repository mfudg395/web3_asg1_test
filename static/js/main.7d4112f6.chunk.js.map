{"version":3,"sources":["assets/images/home-hero-image.jpg","components/HomeBrowser.js","components/PlayCard.js","components/PlayList.js","components/PlayBrowser.js","components/PlayFilter.js","components/FavoriteItem.js","components/FavoriteBar.js","components/PlayGeneralInfo.js","components/PlayCharacter.js","components/PlaySpeech.js","components/PlayScene.js","components/PlayAct.js","components/PlayText.js","components/Tab.js","components/Tabs.js","components/PlayDetailTabs.js","components/PlayTextSearch.js","components/PlayDetails.js","assets/images/logo.png","components/Header.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["HomeBrowser","props","useState","input","setInput","src","HomeHeroImage","className","alt","CSSTransition","classNames","timeout","enter","exit","appear","in","htmlFor","id","type","placeholder","onInput","e","target","value","to","onClick","searchPlays","searchAllPlays","PlayCard","play","title","replace","favState","likelyDate","viewPlay","favoritePlay","PlayList","handleSort","currentTarget","name","sortPlays","plays","map","p","PlayBrowser","isEmpty","PlayFilter","filterTitle","updateFilterTitle","filterBeforeYear","updateFilterBeforeYear","filterAfterYear","updateFilterAfterYear","filterGenre","updateFilterGenre","handleChange","onChange","defaultValue","isNaN","alert","filterPlays","FavoriteItem","removePlay","FavoriteBar","favPlays","PlayGeneralInfo","synopsis","PlayCharacter","character","playSpeech","speech","speaker","lines","line","PlayScene","speakerSpeeches","scene","speeches","filter","stageDirection","sp","PlaySpeech","length","PlayAct","act","scenes","textSelection","char","PlayText","text","acts","Tab","label","toLowerCase","setTextTabSelected","this","activeTab","Component","Tabs","onClickTabItem","tab","setState","state","children","child","PlayDetailTabs","hasPlayInfo","genre","href","wiki","gutenberg","shakespeareOrg","desc","playInfo","persona","c","player","PlayTextSearch","handleOnChange","currSelection","cloneDeep","console","log","setTextSelection","find","s","PlayDetails","setPlayInfo","setHasPlayInfo","textTabSelected","useEffect","getData","a","localStorage","getItem","filename","url","fetch","response","json","data","setItem","JSON","stringify","parse","showFavs","Header","Logo","aboutOnClick","About","closeModal","Modal","setAppElement","document","querySelector","App","setPlays","sort","b","err","playResults","setPlayResults","query","showDetails","setShowDetails","results","includes","sortField","playsCopy","favoritePlays","setFavoritePlays","addFavorite","favPlay","dupe","forEach","isDuplicate","concat","removeFavorite","newFavorites","index","indexOf","splice","setShowFavs","toggleDisplay","beforeYear","afterYear","React","modalIsOpen","setIsOpen","mainStyle","changeMainStyle","openModal","currentPlay","setCurrentPlay","path","exact","render","style","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.7d4112f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-hero-image.a946aa72.jpg\";","import React, { useState } from 'react';\r\nimport '../assets/css/HomeBrowser.css';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeHeroImage from '../assets/images/home-hero-image.jpg';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n/**\r\n * The HomeBrowser is the box on the homepage that allows the user to search for plays\r\n * upon first loading the website. \r\n */\r\nconst HomeBrowser = function (props) {\r\n    \r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const handleSearch = () => props.searchPlays(input);\r\n\r\n    const handleSearchAll = () => props.searchAllPlays();\r\n\r\n    return (\r\n        <div>\r\n            <img src={HomeHeroImage} className=\"HomeHeroImage\" alt=\"Bookshelf with Books\" />\r\n\r\n            <CSSTransition\r\n                classNames=\"example\"\r\n                timeout={{ enter: 500, exit: 300, appear: 1000 }}\r\n                appear={true}\r\n                enter={false}\r\n                exit={false}\r\n                in={true}>\r\n                <div className=\"HomeBrowserContainer\">\r\n\r\n                    <label htmlFor=\"title-input\" id=\"title-label\">Title</label>\r\n                    <input type=\"text\" id=\"title-input\" placeholder=\"Search plays\" onInput={e => setInput(e.target.value)}></input>\r\n                    <div className=\"line-break\"></div>\r\n                    <Link to='/browse'>\r\n                        <button onClick={handleSearch} id=\"matching-plays-button\" className=\"search-button\">Search Matching Plays</button>\r\n                        <button onClick={handleSearchAll} id=\"all-plays-button\" className=\"search-button\" >Search All Plays</button>\r\n                    </Link>\r\n                    <div className=\"line-break\"></div>\r\n                    {/* https://unsplash.com/photos/YLSwjSy7stw */}\r\n                    <div>Hero image credit: Alfons Morales, unsplash.com</div>\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeBrowser;","import React from 'react';\r\n\r\nconst PlayCard = (props) => {\r\n\r\n    const handleFavoriteClick = () => {\r\n        props.favoritePlay(props.play.id);\r\n    }\r\n\r\n    const handleViewClick = () => {\r\n        props.viewPlay(props.play.id);\r\n    }\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/300.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    return (\r\n        <div className=\"play-card\">\r\n            <img src={src} alt={props.play.title} className=\"play-card-image\"/>\r\n            <p className={props.favState ? \"title-and-year-fav-visible\" : \"title-and-year\"}>{props.play.title} ({props.play.likelyDate})</p>\r\n            <div className=\"play-card-button-container\">\r\n                <button className={props.favState ? \"view-button-fav-visible\" : \"view-button\"} onClick={handleViewClick}>View</button><button className=\"favorite-button\" onClick={handleFavoriteClick}>❤️</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayCard;","import _ from 'lodash';\r\nimport React from 'react';\r\nimport PlayCard from './PlayCard';\r\n\r\nconst PlayList = (props) => {\r\n\r\n    const handleSort = (e) => {\r\n        if (e.currentTarget.name == \"title\") {\r\n            props.sortPlays(\"title\");\r\n        } else {\r\n            props.sortPlays(\"year\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"plays-list grid-item\">\r\n            <div className=\"sort-container\">\r\n                <h2 className=\"inline-block\">Sort by:</h2>\r\n                <button className=\"sort-title-button\" name=\"title\" onClick={handleSort}>Title</button>\r\n                <button className=\"sort-year-button\" name=\"year\" onClick={handleSort}>Year</button>\r\n            </div>\r\n            {props.plays.map(p => <PlayCard play={p} key={p.id} favoritePlay={props.favoritePlay} viewPlay={props.viewPlay} favState={props.favState}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayList;","import { isEmpty } from 'lodash';\r\nimport React from 'react';\r\n// import HomeBrowser from \"./HomeBrowser.js\";\r\nimport PlayList from './PlayList.js';\r\n\r\nconst PlayBrowser = (props) => {\r\n    return (\r\n        <div className={props.favState ? \"playBrowser\" : \"playBrowser playBrowser-fav-hidden\"}>\r\n            {!isEmpty(props.plays) ? <PlayList plays={props.plays} sortPlays={props.sortPlays} favoritePlay={props.favoritePlay} viewPlay={props.viewPlay} favState={props.favState}/> : <div className=\"grid-item\">No plays found.</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayBrowser;","import React, {useEffect, useState} from 'react';\r\n\r\nconst PlayFilter = (props) => {\r\n\r\n    const [filterTitle, updateFilterTitle] = useState(\"\");\r\n    const [filterBeforeYear, updateFilterBeforeYear] = useState(\"\");\r\n    const [filterAfterYear, updateFilterAfterYear] = useState(\"\");\r\n    const [filterGenre, updateFilterGenre] = useState(\"\");\r\n\r\n    /**\r\n     * Called when the Filter button is clicked. Before the playResults array\r\n     * is filtered, the years are checked to ensure that they are numbers.\r\n     */\r\n    const processFilter = () => {\r\n        if ((filterBeforeYear !== \"\" && isNaN(filterBeforeYear)) ||\r\n                (filterAfterYear !==\"\" && isNaN(filterAfterYear))) {\r\n            alert(\"Please put a valid year for the year filters.\");\r\n            return;\r\n        }\r\n        props.filterPlays(filterTitle, filterBeforeYear, filterAfterYear, filterGenre);\r\n    }\r\n\r\n    /**\r\n     * all plays in the PlayList. Because of how filterPlays behaves, a blank\r\n     * string is essentially a \"no filter\" option for each field, which is why\r\n     * that's the only thing we have to pass to reset the plays.\r\n     */\r\n    const clearFilter = () => {\r\n        props.filterPlays(\"\", \"\", \"\", \"\");\r\n    }\r\n\r\n    /**\r\n     * This method is called each time a field in the Filters menu changes. It\r\n     * updates the appropriate state value based on the field that was edited.\r\n     */\r\n    const handleChange = (e) => {\r\n        if (e.currentTarget.name === \"title-filter\")\r\n            updateFilterTitle(e.currentTarget.value);\r\n        else if (e.currentTarget.name === \"before-year-filter\")\r\n            updateFilterBeforeYear(e.currentTarget.value);\r\n        else if (e.currentTarget.name === \"after-year-filter\")\r\n            updateFilterAfterYear(e.currentTarget.value);\r\n        else\r\n            updateFilterGenre(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={props.favState ? \"filter\": \"filter filter-fav-hidden\"}>\r\n            <h2>Filters</h2>\r\n            <br/>\r\n            <label htmlFor=\"title-filter\" className=\"filter-label\">Title:</label>\r\n            <input type=\"text\" name=\"title-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"before-year-filter\" className=\"filter-label\">Before year:</label>\r\n            <input type=\"text\" name=\"before-year-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"after-year-filter\" className=\"filter-label\">After year:</label>\r\n            <input type=\"text\" name=\"after-year-filter\" className=\"filter-input\" onChange={handleChange}></input>\r\n\r\n            <label htmlFor=\"genre-filter\" className=\"filter-label\">Genre:</label>\r\n            <select name=\"genre-filter\" defaultValue=\"none\" className=\"filter-input\" onChange={handleChange}>\r\n                <option value=\"\"></option>\r\n                <option value=\"comedy\">Comedy</option>\r\n                <option value=\"tragedy\">Tragedy</option>\r\n                <option value=\"history\">History</option>\r\n            </select>\r\n\r\n            <button className=\"filter-button\" onClick={processFilter}>Filter</button>\r\n            <button className=\"clear-filter-button\" onClick={clearFilter}>Clear</button>\r\n        </div>\r\n    )\r\n}\r\nexport default PlayFilter;","import React from \"react\";\r\n\r\nconst FavoriteItem = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.removePlay(props.play);\r\n    }\r\n\r\n    const viewPlay = () => {\r\n        console.log(props.play.id);\r\n        props.viewPlay(props.play.id);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <p className=\"favorite-item\">\r\n                <button className=\"remove-favorite\" onClick={handleClick}>❌</button>\r\n                <span>{props.play.title} ({props.play.likelyDate})</span>\r\n            </p>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default FavoriteItem;","import React from \"react\";\r\nimport FavoriteItem from \"./FavoriteItem.js\";\r\n\r\nconst FavoriteBar = (props) => {\r\n\r\n    return (\r\n        <article id=\"favorite-bar\">\r\n             <h2 className=\"favorites-header\">Favorites ❤️</h2>\r\n            {props.favPlays.map(p => <FavoriteItem play={p} key={p.id} removePlay={props.removePlay} viewPlay={props.viewPlay}/>)}\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default FavoriteBar;","import React from 'react';\r\n\r\nconst PlayGeneralInfo = (props) => {\r\n    \r\n    const handleCloseClick = () => props.viewPlay(props.play.id);\r\n\r\n    const handleFavoriteClick = () => props.favoritePlay(props.play.id);\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/250.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    return (\r\n        <div className=\"details-general\">\r\n            <img src={src} alt={props.play.title} />\r\n            <h2>{props.play.title}</h2>\r\n            <p>{props.play.synopsis}</p>\r\n            <button className=\"details-close-button\" onClick={handleCloseClick}>Close</button><button className=\"details-favorite-button\" onClick={handleFavoriteClick}>❤️</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayGeneralInfo;","import React from 'react';\r\n\r\nconst PlayCharacter = (props) => {\r\n    return (\r\n        <div>\r\n            <p>{props.character}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayCharacter;","import React from 'react';\r\n\r\nconst playSpeech = (props) => {\r\n    return (\r\n        <div>\r\n            <h4>{props.speech.speaker}</h4>\r\n            {props.speech.lines.map(line => <p>{line}</p> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default playSpeech;","import React from 'react';\r\nimport PlaySpeech from './PlaySpeech';\r\n\r\nconst PlayScene = (props) => {\r\n    let speakerSpeeches = props.scene.speeches;\r\n    speakerSpeeches = speakerSpeeches.filter(speech => speech.speaker === props.speaker);\r\n    if (props.speaker === \"allPlayers\") {\r\n        return (\r\n            <div>\r\n                <h3>{props.scene.name}</h3>\r\n                <hr/>\r\n                <p>{props.scene.title}</p>\r\n                <p><em>{props.scene.stageDirection}</em></p>\r\n                {props.scene.speeches.map(sp => <PlaySpeech speech={sp} />)}\r\n            </div>\r\n        )\r\n    } else if (speakerSpeeches.length === 0) {\r\n        return (\r\n            <div>\r\n                <p>No text found for <em>{props.speaker}.</em></p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h3>{props.scene.name}</h3>\r\n                <hr/>\r\n                <p>{props.scene.title}</p>\r\n                <p><em>{props.scene.stageDirection}</em></p>\r\n                {speakerSpeeches.map(sp => <PlaySpeech speech={sp} />)}\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n    \r\n\r\nexport default PlayScene;","import React from 'react';\r\nimport PlayScene from './PlayScene';\r\n\r\nconst PlayAct = (props) => {\r\n    if (props.scene === \"SCENE I\") {\r\n        return (\r\n            <div className=\"details-text\">\r\n                <h2>{props.act.name}</h2>\r\n                <PlayScene scene={props.act.scenes[0]} speaker={props.textSelection.char}/>\r\n            </div>\r\n        )\r\n    } else if (props.scene === \"SCENE II\") {\r\n        return (\r\n            <div className=\"details-text\">\r\n                <h2>{props.act.name}</h2>\r\n                <PlayScene scene={props.act.scenes[1]} speaker={props.textSelection.char}/>\r\n            </div>\r\n        )\r\n    } else if (props.scene === \"SCENE III\") {\r\n        return (\r\n            <div className=\"details-text\">\r\n                <h2>{props.act.name}</h2>\r\n                <PlayScene scene={props.act.scenes[2]}speaker={props.textSelection.char} />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default PlayAct;","import React from \"react\";\r\nimport PlayAct from \"./PlayAct\";\r\n\r\nconst PlayText = (props) => {\r\n  if (props.textSelection.act === \"ACT I\") \r\n    return <PlayAct act={props.text.acts[0]} scene={props.textSelection.scene} textSelection={props.textSelection}/>;\r\n  else if (props.textSelection.act === \"ACT II\")\r\n    return <PlayAct act={props.text.acts[1]} scene={props.textSelection.scene} textSelection={props.textSelection}/>;\r\n  else if (props.textSelection.act === \"ACT III\")\r\n    return <PlayAct act={props.text.acts[2]} scene={props.textSelection.scene} textSelection={props.textSelection}/>;\r\n};\r\n\r\nexport default PlayText;\r\n","// Taken from https://www.digitalocean.com/community/tutorials/react-tabs-component\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onClick = () => {\r\n        if (this.props.label.length > 0) {\r\n            const { label, onClick } = this.props;\r\n            onClick(label);\r\n        }\r\n        if (this.props.label.toLowerCase() === \"text\") {\r\n            this.props.setTextTabSelected(true);\r\n        } else {\r\n            this.props.setTextTabSelected(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n\r\n        let className = 'tab-list-item';\r\n\r\n        if (activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className={className}\r\n                onClick={onClick}\r\n            >\r\n                {label}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;","// Taken from https://www.digitalocean.com/community/tutorials/react-tabs-component\r\nimport React, { Component, setState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tab from './Tab';\r\n\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label,\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className=\"tabs\">\r\n                <ol className=\"tab-list\">\r\n                    {children.map((child) => {\r\n                        const { label } = child.props;\r\n\r\n                        return (\r\n                            <Tab\r\n                                setTextTabSelected={this.props.setTextTabSelected}\r\n                                activeTab={activeTab}\r\n                                key={label}\r\n                                label={label}\r\n                                onClick={onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ol>\r\n                <div className=\"tab-content\">\r\n                    {children.map((child) => {\r\n                        if (child.props.label !== activeTab) return undefined;\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs;","import React from 'react';\r\nimport PlayCharacter from './PlayCharacter';\r\nimport PlayText from './PlayText';\r\nimport Tabs from \"./Tabs\";\r\n\r\nconst PlayDetailTabs = (props) => {\r\n\r\n    return (\r\n        <div className=\"details-tabs\">\r\n            {props.hasPlayInfo ? // to display character and text tabs\r\n                <Tabs setTextTabSelected={props.setTextTabSelected} >\r\n                    <div label=\"Details\">\r\n                        <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\r\n                        <p><strong>Genre:</strong> {props.play.genre}</p>\r\n                        <p><a href={props.play.wiki}>Wiki</a> - <a href={props.play.gutenberg}>Gutenberg</a> - <a href={props.play.shakespeareOrg}>Shakespeare.org</a></p>\r\n                        <p><strong>Description:</strong> {props.play.desc}</p>\r\n                    </div>\r\n                    <div label=\"Characters\">\r\n                        {props.playInfo.persona.map(c => <PlayCharacter character={c.player} key={c.player} />)}\r\n                    </div>\r\n                    <div label=\"Text\">\r\n                        {<PlayText text={props.playInfo} textSelection={props.textSelection} />}\r\n                    </div>\r\n                </Tabs>\r\n                : // to only display details tab\r\n                <Tabs setTextTabSelected={props.setTextTabSelected}>\r\n                    <div label=\"Details\">\r\n                        <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\r\n                        <p><strong>Genre:</strong> {props.play.genre}</p>\r\n                        <p><a href={props.play.wiki}>Wiki</a> - <a href={props.play.gutenberg}>Gutenberg</a> - <a href={props.play.shakespeareOrg}>Shakespeare.org</a></p>\r\n                        <p><strong>Description:</strong> {props.play.desc}</p>\r\n                    </div>\r\n                    <div label=\"\"></div>{/* an empty tab is the only thing between me and my forever-sleep*/}\r\n                </Tabs>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayDetailTabs;","import React from 'react';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\n\r\nconst PlayTextSearch = (props) => {\r\n\r\n    const handleCloseClick = () => props.viewPlay(props.play.id);\r\n\r\n    const handleFavoriteClick = () => props.favoritePlay(props.play.id);\r\n\r\n    // on Randy's suggestion, taken from https://placeholder.com/\r\n    const src = `https://via.placeholder.com/250.png/?text=${props.play.title.replace(/\\s/g, '+')}`\r\n\r\n    const handleOnChange = (e) => {\r\n        const currSelection = cloneDeep(props.textSelection);\r\n        if (e.target.name === \"act\") {\r\n            currSelection.act = e.target.value;\r\n        } else if (e.target.name === \"scene\") {\r\n            currSelection.scene = e.target.value;\r\n        } else if (e.target.name === \"char\") {\r\n            currSelection.char = e.target.value;\r\n        } else {\r\n            console.log(\"didn't change act, scene, or character\")\r\n        }\r\n        props.setTextSelection(currSelection);\r\n    }\r\n\r\n    return (\r\n        <div className=\"details-general\">\r\n            <img src={src} alt={props.play.title} />\r\n            <h2>{props.play.title}</h2>\r\n            <select name=\"act\" id=\"act\" onChange={handleOnChange}>\r\n                {props.playInfo.acts.map(act => <option value={act.name}>{act.name}</option>)}\r\n            </select>\r\n            <select name=\"scene\" id=\"scene\" onChange={handleOnChange}>\r\n                {props.playInfo.acts.find(act => act.name === props.textSelection.act).scenes.map(s => <option value={s.name}>{s.name}</option>)}\r\n            </select>\r\n            <div>\r\n                <select name=\"char\" id=\"char\" onChange={handleOnChange}>\r\n                    <option value=\"allPlayers\">ALL PLAYERS</option>\r\n                    {props.playInfo.persona.map(p => <option value={p.player}>{p.player}</option>)}\r\n                </select>\r\n                <input type=\"text\" placeholder=\"Search\"></input>\r\n            </div>\r\n            <button className=\"details-close-button\" onClick={handleCloseClick}>Close</button><button className=\"details-favorite-button\" onClick={handleFavoriteClick}>❤️</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayTextSearch;","/**\r\n* The general data flow of the \"Play Details\" view is as follows:\r\n* 1. If the selected play has characters and text, that Play object is retrieved and set to the playInfo hook.\r\n*      - The hasPlayInfo hook is then set to \"true\"; if hasPlayInfo is false, the Characters and Text tabs will disappear.\r\n* \r\n* 2. The textSelection hook is filled with default data; that is, ACT I, SCENE I, and allPlayers.\r\n*      - textSelection is an object that contains the user's selected act, scene, and speaker, with each stored as a string.\r\n*      - Not to be confused with textTabSelected, which is an unrelated boolean stating if the user is in the \"Text\" tab.\r\n*\r\n* 3. The details for the selected play are rendered, and textSelection is passed as a prop to the PlayDetailTabs and \r\n*    PlayTextSearch components.\r\n*      - PlayDetailTabs is the component that contains the \"Details\", \"Characters\", and \"Text\" tabs. The \"Text\" tab shows the\r\n*        play's script for the currently selected act, scene, and speaker (or all speakers, if that's what's selected).\r\n*      - PlayTextSearch contains the dropdown menus to select different acts/scenes/speakers. Whenever one of these menus\r\n*        is changed, setTextSelection is called to update the new chosen act/scene/speaker, and PlayDetailTabs is re-rendered\r\n*        to reflect those changes.\r\n*\r\n* 4. When rendering the \"Text\" tab, the selected act, scene, and speaker will propogate down to each component in this order:\r\n*    PlayDetailTabs > PlayText > PlayAct > PlayScene > PlaySpeech\r\n*      - PlayDetailTabs could be considered the highest level component in this hierarchy, since it contains our playInfo and\r\n*        textSelection hooks. These hooks are passed as props to the above components so that each act, scene, and speech can\r\n*        be rendered according to the user's selection.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PlayGeneralInfo from \"./PlayGeneralInfo\";\r\nimport PlayDetailTabs from \"./PlayDetailTabs\";\r\nimport PlayTextSearch from \"./PlayTextSearch\";\r\n\r\nconst PlayDetails = (props) => {\r\n  const [playInfo, setPlayInfo] = useState({});\r\n  const [hasPlayInfo, setHasPlayInfo] = useState(false);\r\n\r\n  const [textTabSelected, setTextTabSelected] = useState(false);\r\n  const [textSelection, setTextSelection] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      if (!localStorage.getItem(props.play.id)) { // if not in localstorage\r\n        if (props.play.filename != \"\") { // if play has characters & text\r\n          const url = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${props.play.id}`;\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          console.log(\"api data: \" + data);\r\n          setPlayInfo(data);\r\n          setTextSelection({\r\n            act: data.acts[0].name,\r\n            scene: data.acts[0].scenes[0].name,\r\n            char: \"allPlayers\",\r\n          });\r\n          setHasPlayInfo(true);\r\n          localStorage.setItem(props.play.id, JSON.stringify(data));\r\n        }\r\n      } else {\r\n        const data = JSON.parse(localStorage.getItem(props.play.id));\r\n        setPlayInfo(data);\r\n        setTextSelection({\r\n          act: data.acts[0].name,\r\n          scene: data.acts[0].scenes[0].name,\r\n          char: \"allPlayers\",\r\n        });\r\n        setHasPlayInfo(true);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={props.showFavs ? \"details-panel-shrink\" : \"details-panel\"}>\r\n      {/* if open detail tab is \"text\", display textsearch instead of PlayGeneralInfo */}\r\n      {textTabSelected ? (\r\n        <PlayTextSearch\r\n          play={props.play}\r\n          playInfo={playInfo}\r\n          viewPlay={props.viewPlay}\r\n          favoritePlay={props.favoritePlay}\r\n          textSelection={textSelection}\r\n          setTextSelection={setTextSelection}\r\n        />\r\n      ) : (\r\n        <PlayGeneralInfo\r\n          play={props.play}\r\n          viewPlay={props.viewPlay}\r\n          favoritePlay={props.favoritePlay}\r\n        />\r\n      )}\r\n      <PlayDetailTabs\r\n        play={props.play}\r\n        playInfo={playInfo}\r\n        hasPlayInfo={hasPlayInfo}\r\n        textSelection={textSelection}\r\n        setTextSelection={setTextSelection}\r\n        setTextTabSelected={setTextTabSelected}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayDetails;","export default __webpack_public_path__ + \"static/media/logo.e66a4045.png\";","import React from \"react\";\r\nimport Logo from \"../assets/images/logo.png\";\r\nimport { Link } from 'react-router-dom'; \r\n\r\nconst Header = (props) => {\r\n\r\n    const handleClick = () => {\r\n        props.aboutOnClick();\r\n    }\r\n\r\n    return (\r\n        <header className=\"list-view-header\">\r\n            <div className=\"flex-container flex-vertical-center\">\r\n                {/* <!-- logo source: https://toppng.com/free-image/experience-the-discussion-online-library-book-logo-PNG-free-PNG-Images_189362 --> */}\r\n                <Link to=\"/home\">\r\n                    <img src={Logo} title=\"Book Logo\" alt=\"Book Logo\" className=\"site-logo\" />\r\n                </Link>\r\n                <button className=\"about-button\" onClick={handleClick}>About</button>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport './about.css';\r\n\r\nconst About = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.closeModal();\r\n    }\r\n\r\n    return (\r\n        <article className=\"modal-main\">\r\n            <h1>About</h1>\r\n            <p>Group Members: Anthony Dang, Matthew Fudge, Nahuel Paladino</p>\r\n            <p>GitHub Link: <a href=\"https://github.com/npala043/web3_asg1\">https://github.com/npala043/web3_asg1</a></p>\r\n            <p>Technology Used: Laptops, Mice, Our Noggins</p>\r\n            <p>Third-Party Source Code:</p>\r\n                <ul>\r\n                    <li>a</li>\r\n                    <li>b</li>\r\n                    <li>c</li>\r\n                    <li>d</li>\r\n                </ul>\r\n            \r\n            <button onClick={handleClose}>Close</button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default About;","import './App.css';\r\nimport HomeBrowser from './components/HomeBrowser.js';\r\nimport PlayBrowser from './components/PlayBrowser.js';\r\nimport PlayFilter from './components/PlayFilter.js';\r\nimport FavoriteBar from './components/FavoriteBar.js';\r\nimport PlayDetails from './components/PlayDetails';\r\nimport Header from './components/Header.js';\r\nimport About from './components/About.js';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\n// import { xor } from 'lodash';\r\n// import ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement(document.querySelector(\"#root\"));\r\n\r\nfunction App() {\r\n\r\n  // array of all plays, to be kept in local storage\r\n  const [plays, setPlays] = useState([]);\r\n\r\n  // fetch all plays\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        if (localStorage.getItem(\"playsList\")) {\r\n          const data = JSON.parse(localStorage.getItem(\"playsList\"));\r\n          data.sort((a, b) => a.title > b.title ? 1 : -1);\r\n          setPlays(data);\r\n        } else {\r\n          const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          data.sort((a, b) => a.title > b.title ? 1 : -1);\r\n          localStorage.setItem(\"playsList\", JSON.stringify(data));\r\n          setPlays(data);\r\n        }\r\n      } catch (err) {\r\n        console.err(err);\r\n      }\r\n    };\r\n    getData();\r\n  }, [])\r\n\r\n  // array of plays to display in PlayBrowser\r\n  const [playResults, setPlayResults] = useState([]);\r\n\r\n  // create new array of plays based on search query\r\n  const searchPlays = (query) => {\r\n    if (showDetails) setShowDetails(false);\r\n    const results = plays.filter(p => p.title.toLowerCase().includes(query.toLowerCase()));\r\n    setPlayResults(results);\r\n  }\r\n\r\n  // set PlayBrowser to display all plays\r\n  const searchAllPlays = () => {\r\n    if (showDetails) setShowDetails(false);\r\n    setPlayResults(plays);\r\n  }\r\n\r\n  const sortPlays = (sortField) => {\r\n    const playsCopy = cloneDeep(playResults);\r\n    playsCopy.sort(function (a, b) {\r\n      if (sortField === \"title\") return a.title > b.title ? 1 : -1;\r\n      if (sortField === \"year\") return a.likelyDate > b.likelyDate ? -1 : 1;\r\n    })\r\n    setPlayResults(playsCopy);\r\n  }\r\n\r\n  // array of the favorited plays\r\n  const [favoritePlays, setFavoritePlays] = useState([]);\r\n\r\n  const addFavorite = (id) => {\r\n    const copyPlays = cloneDeep(plays);\r\n\r\n    const favPlay = copyPlays.find(p => p.id === id);\r\n\r\n    if (isDuplicate(favPlay)) {\r\n      alert(\"Play already in favorites!\");\r\n    } else {\r\n      setFavoritePlays(favoritePlays.concat(favPlay));\r\n    }\r\n\r\n  }\r\n\r\n  // Helper function to check if the play being added is already in favorites\r\n  function isDuplicate(favPlay) {\r\n    let dupe = false;\r\n    favoritePlays.forEach(p => {\r\n      if (p.id === favPlay.id) {\r\n        dupe = true;\r\n      }\r\n    });\r\n    return dupe;\r\n  }\r\n\r\n  // Removes a specific play from favorites list\r\n  const removeFavorite = (play) => {\r\n    const newFavorites = [...favoritePlays];\r\n    const index = newFavorites.indexOf(play);\r\n    newFavorites.splice(index, 1);\r\n    setFavoritePlays(newFavorites);\r\n  }\r\n\r\n  // renamed this so I can imitate its usage\r\n  const [showFavs, setShowFavs] = useState(true);\r\n\r\n  const toggleDisplay = () => setShowFavs(!showFavs);\r\n\r\n\r\n  const filterPlays = (title, beforeYear, afterYear, genre) => {\r\n    let playsCopy = [...plays]; // make shallow copy of original Plays array (contains every play to start)\r\n    playsCopy = playsCopy.filter(p => p.title.toLowerCase().includes(title.toLowerCase()));\r\n    if (beforeYear !== \"\")\r\n      playsCopy = playsCopy.filter(p => beforeYear > p.likelyDate);\r\n    if (afterYear !== \"\")\r\n      playsCopy = playsCopy.filter(p => afterYear < p.likelyDate);\r\n    if (genre !== \"\")\r\n      playsCopy = playsCopy.filter(p => genre === p.genre);\r\n    setPlayResults(playsCopy);\r\n    // sortPlays(\"title\"); // WHY DOES THIS BREAK THE FILTER?\r\n  }\r\n\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  const [mainStyle, changeMainStyle] = React.useState(\"\");\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n    changeMainStyle(\"blur(8px)\");\r\n    console.log(mainStyle);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    changeMainStyle(\"none\");\r\n  }\r\n  // boolean of whether or not to display play details pane\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const toggleDetails = () => setShowDetails(!showDetails);\r\n\r\n  // id of play to display in play details pane\r\n  const [currentPlay, setCurrentPlay] = useState(\"\");\r\n\r\n  const viewPlay = (id) => {\r\n    toggleDetails();\r\n    setCurrentPlay(id);\r\n  }\r\n\r\n  // const favoriteViewPlay = (id) => {\r\n  //   if (!showDetails) {\r\n  //     toggleDetails();\r\n  //   }\r\n  //   setCurrentPlay(id);\r\n  // }\r\n\r\n  return (\r\n    <main id=\"app-page\" >\r\n      <Route path='/' exact render={() => {\r\n        return (\r\n          <HomeBrowser searchPlays={searchPlays} searchAllPlays={searchAllPlays} />\r\n        );\r\n      }} />\r\n      <Route path='/home' exact render={() => {\r\n        return (\r\n          <HomeBrowser searchPlays={searchPlays} searchAllPlays={searchAllPlays} />\r\n        );\r\n      }} />\r\n      <Route path='/browse' exact render={() => {\r\n        return (\r\n          <div>\r\n            {modalIsOpen ? <About closeModal={closeModal}><p>Modal</p> </About> : null}\r\n            <div style={{ filter: mainStyle }}>\r\n              <Header aboutOnClick={openModal} />\r\n              <div className=\"main-container\">\r\n                {showFavs ? <button className=\"favorites-toggle-left\" onClick={toggleDisplay}>←</button>: <button className=\"favorites-toggle-right\" onClick={toggleDisplay}><span class=\"tooltip-text\">Favorites</span>→</button>}\r\n                {showFavs ?\r\n                  <article className={showFavs ? \"favorites-bar\" : \"favorites-bar-hidden\"}>\r\n                    <FavoriteBar favPlays={favoritePlays} removePlay={removeFavorite} toggleDisplay={toggleDisplay}/>\r\n                  </article> : null\r\n                }\r\n                <article className={showDetails ? \"hidden\" : \"sidebar\"}>\r\n                  {!showDetails ? <PlayFilter plays={playResults} filterPlays={filterPlays} favState={showFavs}/> : null}\r\n                </article>\r\n                {!showDetails ? <PlayBrowser plays={playResults} sortPlays={sortPlays} favoritePlay={addFavorite} viewPlay={viewPlay} favState={showFavs}/> : null}\r\n                {showDetails ? <PlayDetails play={plays.find(p => p.id === currentPlay)} viewPlay={viewPlay} favoritePlay={addFavorite} showFavs={showFavs}/> : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}